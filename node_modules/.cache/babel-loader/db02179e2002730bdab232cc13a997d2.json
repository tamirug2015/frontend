{"ast":null,"code":"import API from \"../../API\";\nimport { addCartAction, fetchCartItemsAction, increaseCartAction, decreaseCartAction } from \"./actions\";\nimport { push } from \"connected-react-router\";\nconst api = new API();\nconst CARTS_KEY = \"CARTS_KEY\";\nexport const fetchCarts = () => {\n  return async dispatch => {\n    return api.getCarts().then(carts => {\n      const subtotal = calculateSubtotal(carts);\n      dispatch(fetchCartItemsAction(carts, subtotal));\n    }).catch(error => {\n      alert(\"Failed to connect API: /carts/\");\n    });\n  };\n};\nexport const addCart = item => {\n  return async (dispatch, getState) => {\n    return api.addCarts(item.id).then(addedCart => {\n      let prevCarts = getState().carts.list;\n      addedCart[\"item\"] = item;\n      prevCarts.push(addedCart);\n      const subtotal = calculateSubtotal(prevCarts);\n      dispatch(addCartAction(prevCarts, subtotal));\n    }).catch(error => {\n      alert(\"Failed to connect API to add cart\");\n      console.log(error);\n    });\n  };\n};\nexport const increaseCart = cart_id => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let matchedCarts = prevCarts.filter(cart => cart.id === cart_id);\n    let nextSelectedCount = matchedCarts[0].quantity + 1;\n    return api.updateCarts(cart_id, nextSelectedCount).then(updatedCart => {\n      prevCarts = prevCarts.filter(cart => cart.id !== cart_id);\n      prevCarts.push(updatedCart);\n      const subtotal = calculateSubtotal(prevCarts);\n      dispatch(increaseCartAction(prevCarts, subtotal));\n    }).catch(error => {\n      alert(\"Failed to connect API to increase cart's quantity\");\n      console.log(error);\n    });\n  };\n};\nexport const decreaseCart = cart_id => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let matchedCarts = prevCarts.filter(cart => cart.id === cart_id);\n    let nextSelectedCount = matchedCarts[0].quantity - 1;\n\n    if (nextSelectedCount > 0) {\n      // if quantity is more than 0, update\n      return api.updateCarts(cart_id, nextSelectedCount).then(updatedCart => {\n        prevCarts = prevCarts.filter(cart => cart.id !== cart_id);\n        prevCarts.push(updatedCart);\n        const subtotal = calculateSubtotal(prevCarts);\n        dispatch(decreaseCartAction(prevCarts, subtotal));\n      }).catch(error => {\n        alert(\"Failed to connect API to decrease cart's quantity\");\n        console.log(error);\n      });\n    } else {\n      // if quantity is 0, delete\n      return api.deleteCarts(cart_id).then(deletedCarts => {\n        prevCarts = prevCarts.filter(cart => cart.id !== cart_id);\n        const subtotal = calculateSubtotal(prevCarts);\n        dispatch(decreaseCartAction(prevCarts, subtotal));\n      }).catch(error => {\n        alert(\"Failed to connect API to decrease cart's quantity\");\n        console.log(error);\n      });\n    }\n  };\n};\n\nconst calculateSubtotal = carts => {\n  let subtotal = 0;\n\n  for (let key in carts) {\n    subtotal += Number(carts[key].item.price) * carts[key].quantity;\n  }\n\n  return subtotal;\n};","map":{"version":3,"sources":["/Users/tamirugebresilese/Desktop/frontend/src/reducks/carts/operations.js"],"names":["API","addCartAction","fetchCartItemsAction","increaseCartAction","decreaseCartAction","push","api","CARTS_KEY","fetchCarts","dispatch","getCarts","then","carts","subtotal","calculateSubtotal","catch","error","alert","addCart","item","getState","addCarts","id","addedCart","prevCarts","list","console","log","increaseCart","cart_id","matchedCarts","filter","cart","nextSelectedCount","quantity","updateCarts","updatedCart","decreaseCart","deleteCarts","deletedCarts","key","Number","price"],"mappings":"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","sourcesContent":["import API from \"../../API\";\nimport {\n  addCartAction,\n  fetchCartItemsAction,\n  increaseCartAction,\n  decreaseCartAction,\n} from \"./actions\";\nimport { push } from \"connected-react-router\";\n\nconst api = new API();\nconst CARTS_KEY = \"CARTS_KEY\";\n\nexport const fetchCarts = () => {\n  return async (dispatch) => {\n    return api\n      .getCarts()\n      .then((carts) => {\n        const subtotal = calculateSubtotal(carts);\n        dispatch(fetchCartItemsAction(carts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API: /carts/\");\n      });\n  };\n};\n\nexport const addCart = (item) => {\n  return async (dispatch, getState) => {\n    return api\n      .addCarts(item.id)\n      .then((addedCart) => {\n        let prevCarts = getState().carts.list;\n        addedCart[\"item\"] = item;\n        prevCarts.push(addedCart);\n        const subtotal = calculateSubtotal(prevCarts);\n        dispatch(addCartAction(prevCarts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API to add cart\");\n        console.log(error);\n      });\n  };\n};\n\nexport const increaseCart = (cart_id) => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let matchedCarts = prevCarts.filter((cart) => cart.id === cart_id);\n    let nextSelectedCount = matchedCarts[0].quantity + 1;\n    return api\n      .updateCarts(cart_id, nextSelectedCount)\n      .then((updatedCart) => {\n        prevCarts = prevCarts.filter((cart) => cart.id !== cart_id);\n        prevCarts.push(updatedCart);\n        const subtotal = calculateSubtotal(prevCarts);\n        dispatch(increaseCartAction(prevCarts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API to increase cart's quantity\");\n        console.log(error);\n      });\n  };\n};\n\nexport const decreaseCart = (cart_id) => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let matchedCarts = prevCarts.filter((cart) => cart.id === cart_id);\n    let nextSelectedCount = matchedCarts[0].quantity - 1;\n    if (nextSelectedCount > 0) {\n      // if quantity is more than 0, update\n      return api\n        .updateCarts(cart_id, nextSelectedCount)\n        .then((updatedCart) => {\n          prevCarts = prevCarts.filter((cart) => cart.id !== cart_id);\n          prevCarts.push(updatedCart);\n          const subtotal = calculateSubtotal(prevCarts);\n          dispatch(decreaseCartAction(prevCarts, subtotal));\n        })\n        .catch((error) => {\n          alert(\"Failed to connect API to decrease cart's quantity\");\n          console.log(error);\n        });\n    } else {\n      // if quantity is 0, delete\n      return api\n        .deleteCarts(cart_id)\n        .then((deletedCarts) => {\n          prevCarts = prevCarts.filter((cart) => cart.id !== cart_id);\n          const subtotal = calculateSubtotal(prevCarts);\n          dispatch(decreaseCartAction(prevCarts, subtotal));\n        })\n        .catch((error) => {\n          alert(\"Failed to connect API to decrease cart's quantity\");\n          console.log(error);\n        });\n    }\n  };\n};\n\nconst calculateSubtotal = (carts) => {\n  let subtotal = 0;\n  for (let key in carts) {\n    subtotal += Number(carts[key].item.price) * carts[key].quantity;\n  }\n  return subtotal;\n};\n"]},"metadata":{},"sourceType":"module"}